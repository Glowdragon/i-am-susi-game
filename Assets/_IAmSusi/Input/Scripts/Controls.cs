//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/_FGJ2022/Input/Settings/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Game.Input
{
    public partial class @Controls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @Controls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Avatar"",
            ""id"": ""48fd5468-aaba-4d4b-b875-3c1eaa8796ec"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""04328f5e-18a8-4667-a46c-dd90de2924dd"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraVelocity"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d69ec418-6bd8-4311-81dc-72cf48b371e9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""ScaleVector2(x=5,y=5)"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d2a8f6bd-92c4-49e8-b734-5a5c74e6f3d5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f676853f-2968-4284-92d7-484a05dd4ae4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""ca4b11ac-7bbb-481a-80ec-4dffb6a1236f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""182591fd-26c9-4ff7-97e6-752722664190"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""65166607-2182-4b18-acbf-f7be3ca19314"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1cd62e44-d7c3-4ba0-8ace-21bd918d8bfd"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""802b693b-5af7-412c-95a8-5a8297d04d42"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""72ee6864-fa73-497a-9ecf-c23c58cdc7bf"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""287d5fc1-4cf4-4d4b-973f-1ef47db7822d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2c82e6e5-9b3a-470b-82f0-486e2286ae7b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraVelocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""482818b9-47bf-45ca-8011-e5efb56a50b9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraVelocity"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bc92d218-0bb9-40e2-adcc-7afb2025a9f6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraVelocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""59ae55a6-0d40-4a1b-b75c-987ed5c94d92"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraVelocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""293f148e-ec6c-4171-b0fb-feb8b6456820"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraVelocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""283eb54d-4847-4ec4-96b8-8075445afe82"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraVelocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4a7d95dc-44db-49b9-ae51-66dc22daf96d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc16462e-a513-4b93-b52e-e70038443cf9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62f04d77-402d-4589-92be-321fe333ed42"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47af0f6c-9779-4e15-adff-57f04d936b40"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f4cb2f3-378c-4597-b4fa-b28c6c877ac1"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cc7e2b1-b6ea-407b-ba5f-022d48166c17"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fcf2f88-a0f9-4686-8172-d45b78579ca1"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a57e9c1-8068-4e6a-8e47-b958bbec3b2d"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Avatar
            m_Avatar = asset.FindActionMap("Avatar", throwIfNotFound: true);
            m_Avatar_Move = m_Avatar.FindAction("Move", throwIfNotFound: true);
            m_Avatar_CameraVelocity = m_Avatar.FindAction("CameraVelocity", throwIfNotFound: true);
            m_Avatar_CameraPosition = m_Avatar.FindAction("CameraPosition", throwIfNotFound: true);
            m_Avatar_Jump = m_Avatar.FindAction("Jump", throwIfNotFound: true);
            m_Avatar_Dash = m_Avatar.FindAction("Dash", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Avatar
        private readonly InputActionMap m_Avatar;
        private IAvatarActions m_AvatarActionsCallbackInterface;
        private readonly InputAction m_Avatar_Move;
        private readonly InputAction m_Avatar_CameraVelocity;
        private readonly InputAction m_Avatar_CameraPosition;
        private readonly InputAction m_Avatar_Jump;
        private readonly InputAction m_Avatar_Dash;
        public struct AvatarActions
        {
            private @Controls m_Wrapper;
            public AvatarActions(@Controls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Avatar_Move;
            public InputAction @CameraVelocity => m_Wrapper.m_Avatar_CameraVelocity;
            public InputAction @CameraPosition => m_Wrapper.m_Avatar_CameraPosition;
            public InputAction @Jump => m_Wrapper.m_Avatar_Jump;
            public InputAction @Dash => m_Wrapper.m_Avatar_Dash;
            public InputActionMap Get() { return m_Wrapper.m_Avatar; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(AvatarActions set) { return set.Get(); }
            public void SetCallbacks(IAvatarActions instance)
            {
                if (m_Wrapper.m_AvatarActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnMove;
                    @CameraVelocity.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnCameraVelocity;
                    @CameraVelocity.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnCameraVelocity;
                    @CameraVelocity.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnCameraVelocity;
                    @CameraPosition.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnCameraPosition;
                    @CameraPosition.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnCameraPosition;
                    @CameraPosition.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnCameraPosition;
                    @Jump.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnJump;
                    @Jump.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnJump;
                    @Jump.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnJump;
                    @Dash.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnDash;
                    @Dash.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnDash;
                    @Dash.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnDash;
                }
                m_Wrapper.m_AvatarActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @CameraVelocity.started += instance.OnCameraVelocity;
                    @CameraVelocity.performed += instance.OnCameraVelocity;
                    @CameraVelocity.canceled += instance.OnCameraVelocity;
                    @CameraPosition.started += instance.OnCameraPosition;
                    @CameraPosition.performed += instance.OnCameraPosition;
                    @CameraPosition.canceled += instance.OnCameraPosition;
                    @Jump.started += instance.OnJump;
                    @Jump.performed += instance.OnJump;
                    @Jump.canceled += instance.OnJump;
                    @Dash.started += instance.OnDash;
                    @Dash.performed += instance.OnDash;
                    @Dash.canceled += instance.OnDash;
                }
            }
        }
        public AvatarActions @Avatar => new AvatarActions(this);
        public interface IAvatarActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnCameraVelocity(InputAction.CallbackContext context);
            void OnCameraPosition(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnDash(InputAction.CallbackContext context);
        }
    }
}
